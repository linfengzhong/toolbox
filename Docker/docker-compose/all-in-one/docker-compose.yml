version: '3.8'
services:

    httpd:
        build:
            dockerfile: Dockerfile
            context: ./httpd
        container_name: httpd
        restart: always
        environment: 
            TZ: Asia/Shanghai
        ports: 
            - 80
#        volumes: 
#            - ./conf.d/httpd/:/usr/local/apache2/conf/httpd.conf
        networks: 
            - all-in-one-net

    nginx:
        build:
            dockerfile: Dockerfile
            context: ./nginx
        container_name: nginx
        restart: always
        environment: 
            TZ: Asia/Shanghai
        ports:
            - 80:80
        volumes: 
            - ./conf.d/nginx/conf.d:/etc/nginx/conf.d
            - ./conf.d/nginx/html:/usr/share/nginx/html
            - ./conf.d/nginx/subscribe:/etc/v2ray-agent/subscribe
            - ./conf.d/nginx/nginx_logs:/var/log/nginx
            - ./conf.d/nginx/web_logs:/etc/nginx/logs
            - ./conf.d/tls:/etc/nginx/ssl
        networks: 
            - all-in-one-net
            
    trojan-go:
        build:
            dockerfile: Dockerfile
            context: ./trojan-go
        container_name: trojan-go
        restart: always
        environment: 
            TZ: Asia/Shanghai
#        ports:
#            - 443:443
        volumes:
            - ./conf.d/trojan-go:/etc/trojan-go
        networks: 
            - all-in-one-net
        depends_on:
            - nginx

    xray:
        build:
            dockerfile: Dockerfile
            context: ./xray
        container_name: xray
        restart: always
        environment: 
            TZ: Asia/Shanghai
        ports: 
            - 443:443
        volumes: 
            - ./conf.d/xray:/etc/xray
        networks: 
            - all-in-one-net
        depends_on:
            - nginx

    v2ray:
        build:
            dockerfile: Dockerfile
            context: ./v2ray
        container_name: v2ray
        restart: always
        environment: 
            TZ: Asia/Shanghai
        ports: 
            - 1080
        volumes: 
            - ./conf.d/v2ray:/etc/v2ray
        networks: 
            - all-in-one-net
        depends_on:
            - nginx

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        restart: always
        environment: 
            TZ: Asia/Shanghai
#        ports:
#            - 9090:9090
        volumes:
            - ./conf.d/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml 
            - ./conf.d/prometheus/groups/:/root/prometheus/groups/
            - ./conf.d/prometheus/groups/:/usr/local/prometheus/groups/ 
            - ./conf.d/prometheus/rules/:/root/prometheus/rules/
            - ./conf.d/prometheus/groups/:/usr/local/prometheus/rules/ 
        networks: 
            - all-in-one-net

    alertmanager:
        image: prom/alertmanager:latest
        container_name: alertmanager
        restart: always
        environment: 
            TZ: Asia/Shanghai
#        ports:
#            - 9093:9093
        volumes:
            - ./conf.d/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
        networks: 
            - all-in-one-net

    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        restart: always
        environment: 
        #https://grafana.com/docs/grafana/latest/administration/configuration/
        #GF_<SectionName>_<KeyName>
            TZ: Asia/Shanghai
        #    GF_PATHS_CONFIG: /etc/grafana/grafana.ini
        #    GF_PATHS_DATA: /var/lib/grafana
        #    GF_PATHS_HOME: /usr/share/grafana
        #    GF_PATHS_LOGS: /var/log/grafana
        #    GF_PATHS_PLUGINS: /var/lib/grafana/plugins
        #    GF_PATHS_PROVISIONING: /etc/grafana/provisioning
        #    GF_SERVER_PROTOCOL: https
            GF_SERVER_DOMAIN: shanghai3721.ml
            GF_ROOT_URL: %(protocol)s://%(domain)s:%(http_port)s/grafana/
            GF_SERVE_FROM_SUB_PATH: true        
        #    GF_SERVER_CERT_FILE: /etc/grafana/shanghai3721.ml.crt
        #    GF_SERVER_CERT_KEY: /etc/grafana/shanghai3721.ml.key
        volumes:
            - ./conf.d/grafana/:/etc/grafana/
#        ports: 
#            - 3000:3000
        networks: 
            - all-in-one-net
        
    cadvisor:
        image: google/cadvisor:latest
        container_name: cadvisor
        restart: always
        environment: 
            TZ: Asia/Shanghai
#        ports: 
#            - 8080:8080
        volumes:
            - /:/rootfs
            - /var/run:/var/run
            - /sys:/sys
            - /var/lib/docker/:/var/lib/docker
            - /dev/disk/:/dev/disk
        networks: 
            - all-in-one-net
        
networks: 
    all-in-one-net:
        driver: bridge